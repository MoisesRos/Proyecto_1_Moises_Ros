;******************************************************************************
; Universidad del Valle de Guatemala
; Programación de Microcrontroladores
; Proyecto: Laboratorio Contador
; Archivo: Proyecto_1.asm
; Hardware: ATMEGA328p
; Created: 21/02/2024 16:04 AM
; Author : Moises Rosales
;******************************************************************************
; Encabezado: Consiste en realizar un contador binario de 4 Bits. 2 pushbottons
; para aumentar y 2 para decrementar
;******************************************************************************
.include "M328PDEF.inc" ; para reconozer los nombres de los registros
.cseg ; indica que lo que viene después es el segmento de código
.org 0x00 ; establecemos la dirección en posición 0
JMP Main

.org 0x0008
JMP INTERRUPCIONES_EXT

.org 0x001A
JMP ISR_TIMER_OVF1

.org 0x0020
JMP ISR_TIMER_OVF0


Main:
;******************************************************************************
; stack pointer
;******************************************************************************
LDI R16, LOW(RAMEND)
OUT SPL, R16 
LDI R17, HIGH(RAMEND)
OUT SPH, R17
;******************************************************************************
; Configuración
;******************************************************************************
Setup:
	LDI R16, (1 << CLKPCE)
	STS CLKPR, R16 // Habilitamos el prescalar
	LDI R16, 0b0000_0100
	STS CLKPR, R16 // Frecuencia 16MGHz

;SALIDAS
LDI R16, 0xFF
OUT DDRD, R16
LDI R16, 0b00011000
OUT DDRB, R16
LDI R16, 0b0011_0000
OUT DDRC, R16
;ENTRADAS
LDI R16, 0b00001111
OUT PORTC, R16

;INTERRUPCIONES EXTERNAS
LDI R16, (1 << PCIE1)  ; ACTIVAMOS LAS INTERRUPCIONES PCINT[14:8]
STS PCICR, R16
LDI R16, (1 << PCINT8) | (1 << PCINT9) | (1 << PCINT10) | (1 << PCINT11)   ; HABILITAMOS LAS INTERRUPCIONES EN PC0, PC1, PC2 y PC4
STS PCMSK1, r16

LDI R16, (1 << TOIE1) ;HABILITAMOS LA INTERRUPCION POR DESBORDAMIENTO
STS TIMSK1, R16 

LDI R16, (1 << TOIE0) ;HABILITAMOS LA INTERRUPCION POR DESBORDAMIENTO
STS TIMSK0, R16 

;TIMER1
CLR R16
STS TCCR1A, R16 ; MODO NORMAL
CLR R16
LDI R16, (1 << CS12 )|( 1 << CS10) ;PREESCALER DE 1024
STS TCCR1B, R16
CLR R16

LDI R17, 0x1E ;DESBORDAMIENTO
STS TCNT1H, R17	;METEMOS VALOR INICIAL
LDI R17, 0x1B ;DESBORDAMIENTO
STS TCNT1L, R17	;METEMOS VALOR INICIAL

;TIMER0
CLR R16
OUT TCCR0A, R16 ; MODO NORMAL
LDI R16, (1 << CS02 )|( 1 << CS00) ;PREESCALER DE 1024
OUT TCCR0B, R16
CLR R16
LDI R16, 251 ;DESBORDAMIENTO
OUT TCNT0, R16	;METEMOS VALOR INICIAL

LDI		R16, (0<<TXEN0)|(0<<RXEN0)
STS		UCSR0B, R16			;DESACTIVAMOS RX Y TX PARA USARLOS COMO PINES 



; TABLA DE VALORES 
SEGMENTOS: .DB 0x77, 0x14, 0x5B, 0x5E, 0x3C, 0x6E, 0x6F, 0x54, 0x7F, 0x7E, 0xFF
LDI ZH, HIGH(SEGMENTOS << 1)
LDI ZL, LOW(SEGMENTOS << 1)
LPM R19, Z

MOV R21, ZL
MOV R22, ZL
MOV R23, ZL
MOV R24, ZL
MOV R26, ZL
INC R26
MOV R27, ZL
MOV R28, ZL
INC R28
MOV R29, ZL
CLR R25
SEI

Loop:

CPI R25, 0
BREQ RELOJ
CPI R25, 1
BREQ FECHA
CPI R25, 2
BREQ CONFI_HORA_UNI
CPI R25, 3
BREQ CONFI_HORA_DECE
CPI R25, 4
BREQ CONFI_FECHA_UNI
CPI R25, 5
BREQ CONFI_FECHA_DECE
CPI R25, 6
BREQ ALARMA_DEC
CPI R25, 7
BREQ ALARMA_UNI
	RJMP Loop

MULTIPLEXOR:
	CBR R20, 0B0000_0010
	SBIC PORTB, PB4
	RJMP D_3
	SBIC PORTB, PB3
	RJMP D_2
	SBIC PORTC, PC4
	RJMP D_4
	RJMP D_1
	

	RJMP Loop

MULTIPLEXOR_FECHA:
	CBR R20, 0B0000_0010
	SBIC PORTB, PB4
	RJMP D_3_FECHA
	SBIC PORTB, PB3
	RJMP D_2_FECHA
	SBIC PORTC, PC4
	RJMP D_4_FECHA
	RJMP D_1_FECHA
	

	RJMP Loop

;******************************************************************************
; Subrutinas
;******************************************************************************

RELOJ:
	SBRC R20, 1
	BREQ MULTIPLEXOR
	SBRC R20, 0
	BREQ PUENTE_AUMENTAR
	RJMP Loop

FECHA:
	SBRC R20, 1
	BREQ MULTIPLEXOR_FECHA
	SBRC R20, 0
	BREQ PUENTE_AUMENTAR
	RJMP Loop

CONFI_HORA_UNI:
	SBRC R20, 1
	BREQ MULTIPLEXOR
	SBRC R20, 2
	BREQ PUENTE_AUMENTAR
	SBRC R20, 3
	BREQ PUENTE_DECREMENTAR
	RJMP Loop

CONFI_HORA_DECE:
	SBRC R20, 1
	BREQ MULTIPLEXOR
	SBRC R20, 2
	BREQ PUENTE_AUMENTAR3
	SBRC R20, 3
	BREQ PUENTE_DECREMENTAR3
	RJMP Loop

CONFI_FECHA_UNI:
	
	RJMP Loop

CONFI_FECHA_DECE:
	RJMP Loop

ALARMA_DEC:
	RJMP Loop

ALARMA_UNI:
	RJMP Loop




D_1:
	CBI PORTC, PC5
	CBI PORTB, PB4	
	CBI PORTB, PB3	
	SBI PORTC, PC4
	MOV ZL, R21
	LPM R19, Z
	RJMP DISPLAY

D_2:
	SBI PORTC, PC5
	CBI PORTB, PB4	
	CBI PORTB, PB3	
	CBI PORTC, PC4
	MOV ZL, R22
	LPM R19, Z
	RJMP DISPLAY

D_3:
	CBI PORTC, PC5
	CBI PORTB, PB4	
	SBI PORTB, PB3	
	CBI PORTC, PC4
	MOV ZL, R23
	LPM R19, Z
	RJMP DISPLAY

D_4:
	CBI PORTC, PC5
	SBI PORTB, PB4	
	CBI PORTB, PB3	
	CBI PORTC, PC4
	MOV ZL, R24
	LPM R19, Z
	RJMP DISPLAY

;------PUENTES----------
PUENTE_AUMENTAR:
	RJMP AUMENTAR
PUENTE_DECREMENTAR:
	RJMP DECREMENTAR
PUENTE_AUMENTAR3:
	RJMP AUMENTAR3
PUENTE_DECREMENTAR3:
	RJMP DECREMENTAR3
PUENTE_AUMENTAR_FECHA1:
	RJMP AUMENTAR_FECHA1
;-----------------------

D_1_FECHA:
	CBI PORTC, PC5
	CBI PORTB, PB4	
	CBI PORTB, PB3	
	SBI PORTC, PC4
	MOV ZL, R26
	LPM R19, Z
	RJMP DISPLAY

D_2_FECHA:
	SBI PORTC, PC5
	CBI PORTB, PB4	
	CBI PORTB, PB3	
	CBI PORTC, PC4
	MOV ZL, R27
	LPM R19, Z
	RJMP DISPLAY

D_3_FECHA:
	CBI PORTC, PC5
	CBI PORTB, PB4	
	SBI PORTB, PB3	
	CBI PORTC, PC4
	MOV ZL, R28
	LPM R19, Z
	RJMP DISPLAY

D_4_FECHA:
	CBI PORTC, PC5
	SBI PORTB, PB4	
	CBI PORTB, PB3	
	CBI PORTC, PC4
	MOV ZL, R29
	LPM R19, Z
	RJMP DISPLAY

AUMENTAR:
	CBR R20, 0B0000_0001
	CBR R20, 0B0000_0100
	INC R21
	MOV ZL, R21
	LPM R19, Z
	CPI R19, 0xFF
	BREQ RESET_DISPLAY1
	RJMP Loop

AUMENTAR3:
	CBR R20, 0B0000_0100
	INC R23
	MOV ZL, R24
	LPM R19, Z
	CPI R19, 0x5B
	BREQ RESET1_DISPLAY3
	RJMP RESET2_DISPLAY3

DECREMENTAR:
	CBR R20, 0B0000_0001
	CBR R20, 0B0000_0100
	CBR R20, 0B0000_1000
	MOV ZL, R21
	LPM R19, Z
	CPI R19, 0x77
	BREQ RESET_DISPLAY1_2
	DEC R21
	RJMP Loop

DECREMENTAR2:
	MOV ZL, R22
	LPM R19, Z
	CPI R19, 0x77
	BREQ RESET_DISPLAY2_2
	DEC R22
	RJMP Loop

DECREMENTAR3:
	CBR R20, 0B0000_1000
	MOV ZL, R23
	LPM R19, Z
	CPI R19, 0x77
	BREQ RESET_DISPLAY3_2
	DEC R23	
	RJMP Loop

RESET_DISPLAY1:
	LDI R21, LOW(SEGMENTOS << 1)
	RJMP AUMENTAR2

RESET_DISPLAY3_2:
	MOV ZL, R24
	LPM R19, Z
	CPI R19, 0x77
	BREQ RESET_DISPLAY3_2_2
	RJMP RESET_DISPLAY3_2_01

RESET_DISPLAY3_2_2:
	PUSH R16
	LDI R16, 3
	LDI R23, LOW(SEGMENTOS << 1)
	ADD R23, R16
	POP R16
	RJMP DECREMENTAR4

RESET_DISPLAY3_2_01:
	PUSH R16
	LDI R16, 9
	LDI R23, LOW(SEGMENTOS << 1)
	ADD R23, R16
	POP R16
	RJMP DECREMENTAR4

RESET1_DISPLAY3:
	MOV ZL, R23
	LPM R19, Z
	CPI R19, 0x3C
	BREQ RESET_DISPLAY3
	RJMP Loop

DECREMENTAR4:
	MOV ZL, R24
	LPM R19, Z
	CPI R19, 0x77
	BREQ RESET_DISPLAY4_2
	DEC R24
	RJMP Loop

RESET_DISPLAY4_2:
	PUSH R16
	LDI R16, 2
	LDI R24, LOW(SEGMENTOS << 1)
	ADD R24, R16
	POP R16
	RJMP LOOP

RESET_DISPLAY1_2:
	PUSH R16
	LDI R16, 9
	LDI R21, LOW(SEGMENTOS << 1)
	ADD R21, R16
	POP R16
	RJMP DECREMENTAR2

RESET_DISPLAY2_2:
	PUSH R16
	LDI R16, 5
	LDI R22, LOW(SEGMENTOS << 1)
	ADD R22, R16
	POP R16
	RJMP LOOP

AUMENTAR2:
	INC R22
	MOV ZL, R22
	LPM R19, Z
	CPI R19, 0x6F
	BREQ RESET_DISPLAY2
	RJMP Loop

RESET_DISPLAY2:
	LDI R22, LOW(SEGMENTOS << 1)
	CPI R25, 0
	RJMP AUMENTAR3
	RJMP LOOP

RESET2_DISPLAY3:
	MOV ZL, R23
	LPM R19, Z
	CPI R19, 0xFF
	BREQ RESET_DISPLAY3
	RJMP Loop

RESET_DISPLAY3:
	LDI R23, LOW(SEGMENTOS << 1)
	RJMP AUMENTAR4

AUMENTAR4:
	INC R24
	MOV ZL, R24
	LPM R19, Z
	CPI R19, 0x5E
	BREQ RESET_DISPLAY4
	RJMP Loop

RESET_DISPLAY4:
	LDI R24, LOW(SEGMENTOS << 1)
	RJMP AUMENTAR_FECHA1

AUMENTAR_FECHA1:
	CBR R20, 0B0000_0001
	CBR R20, 0B0000_0100
	INC R26
	MOV ZL, R29
	LPM R19, Z
	CPI R19, 0x77
	BREQ INICIO_DE_MESES
	RJMP MESES_SIGUIENTES
	INICIO_DE_MESES:
	MOV ZL, R28
	LPM R19, Z
	CPI R19, 0x14
	BREQ D31
	CPI R19, 0x5B 
	BREQ D28
	CPI R19, 0x5E
	BREQ D31
	CPI R19, 0x3C
	BREQ D30
	CPI R19, 0x6E
	BREQ D31
	CPI R19, 0x6F
	BREQ D30
	CPI R19, 0x54
	BREQ D31
	CPI R19, 0x7F
	BREQ D31
	CPI R19, 0x7E 
	BREQ D30
	MESES_SIGUIENTES:
	MOV ZL, R28
	LPM R19, Z
	CPI R19, 0x77
	BREQ D31
	CPI R19, 0x14
	BREQ D30
	CPI R19, 0x5B
	BREQ D31

	D28:
	MOV ZL, R27
	LPM R19, Z
	CPI R19, 0x5B
	BREQ RESET_FEB8
	RJMP RESET_FEB9
	RESET_FEB8:
	MOV ZL, R26
	LPM R19, Z
	CPI R19, 0x7E
	BREQ RESET_FECHAD1
	RJMP Loop

	RESET_FEB9:
	MOV ZL, R26
	LPM R19, Z
	CPI R19, 0xFF 
	BREQ RESET_FECHAD1
	RJMP Loop

	D31:
	MOV ZL, R27
	LPM R19, Z
	CPI R19, 0x5E
	BREQ RESET_MES1
	RJMP RESET_MES9
	RESET_MES1:
	MOV ZL, R26
	LPM R19, Z
	CPI R19, 0x5B
	BREQ RESET_FECHAD1
	RJMP Loop

	RESET_MES9:
	MOV ZL, R26
	LPM R19, Z
	CPI R19, 0xFF
	BREQ RESET_FECHAD1
	RJMP Loop

	D30:
	MOV ZL, R27
	LPM R19, Z
	CPI R19, 0x5E
	BREQ RESET_MES0
	RJMP RESET_MES9
	RESET_MES0:
	MOV ZL, R26
	LPM R19, Z
	CPI R19, 0x14
	BREQ RESET_FECHAD1
	RJMP Loop

	RESET_FECHAD1:
	LDI R26, LOW(SEGMENTOS << 1)
	RJMP AUMENTAR_FECHA2_1

AUMENTAR_FECHA2_1:
	INC R27
	MOV ZL, R29
	LPM R19, Z
	CPI R19, 0x77
	BREQ INICIO_MESES2
	RJMP OTRO_MES

	INICIO_MESES2:
	MOV ZL, R28
	LPM R19, Z
	CPI R19, 0x5B
	BREQ FEBRERO
	RJMP OTRO_MES
	
	FEBRERO:
	MOV ZL, R27
	LPM R19, Z
	CPI R19, 0x5E
	BREQ RESET_FECHA2
	RJMP Loop

	OTRO_MES:
	MOV ZL, R27
	LPM R19, Z
	CPI R19, 0x3C
	BREQ RESET_FECHA2
	RJMP Loop

	RESET_FECHA2:
	LDI R27, LOW(SEGMENTOS << 1)
	RJMP AUMENTAR_FECHA3

	AUMENTAR_FECHA3:
	INC R28
	MOV ZL, R29
	LPM R19, Z
	CPI R29, 0x5B
	BREQ RESET_FECHAD4_2
	RJMP FECHA_D4

	RESET_FECHAD4_2:
	MOV ZL, R28
	LPM R19, Z
	CPI R29, 0x3C
	BREQ RESET_FECHAD3
	RJMP Loop
	
	FECHA_D4:
	MOV ZL, R28
	LPM R19, Z
	CPI R29, 0xFF
	BREQ RESET_FECHAD3
	RJMP Loop

	RESET_FECHAD3:
	LDI R28, LOW(SEGMENTOS << 1)
	RJMP AUMENTAR_FECHA4

	AUMENTAR_FECHA4:
	INC R29
	MOV ZL, R29
	LPM R19, Z
	CPI R29, 0x5E
	BREQ RESET_FECHAD4
	RJMP Loop

	RESET_FECHAD4:
	LDI R29, LOW(SEGMENTOS << 1)
	RJMP Loop


	



/*

RESET_DISPLAY_FECHA1:
	LDI R26, LOW(SEGMENTOS << 1)
	RJMP AUMENTAR_FECHA2

AUMENTAR_FECHA2:
	CBR R20, 0B0000_0001
	CBR R20, 0B0000_0100
	INC R27
	MOV ZL, R27
	LPM R19, Z
	CPI R19, 0xFF
	BREQ RESET_DISPLAY_FECHA2
	RJMP Loop	

RESET_DISPLAY_FECHA2:
	LDI R27, LOW(SEGMENTOS << 1)
	RJMP AUMENTAR_FECHA3

AUMENTAR_FECHA3:
	CBR R20, 0B0000_0001
	CBR R20, 0B0000_0100
	INC R28
	MOV ZL, R28
	LPM R19, Z
	CPI R19, 0xFF
	BREQ RESET_DISPLAY_FECHA3
	RJMP Loop	

RESET_DISPLAY_FECHA3:
	LDI R28, LOW(SEGMENTOS << 1)
	RJMP AUMENTAR_FECHA4

AUMENTAR_FECHA4:
	CBR R20, 0B0000_0001
	CBR R20, 0B0000_0100
	INC R29
	MOV ZL, R29
	LPM R19, Z
	CPI R19, 0xFF  
	BREQ RESET_DISPLAY_FECHA4
	RJMP Loop	

RESET_DISPLAY_FECHA4:
	LDI R29, LOW(SEGMENTOS << 1)
	RJMP Loop*/

DISPLAY:
	SBRS R19, 0
	CBI	PORTD, PD1
	SBRC R19, 0
	SBI PORTD, PD1
	SBRS R19, 1
	CBI	PORTD, PD0
	SBRC R19, 1
	SBI PORTD, PD0
	SBRS R19, 2
	CBI	PORTD, PD2
	SBRC R19, 2
	SBI PORTD, PD2
	SBRS R19, 3
	CBI	PORTD, PD3
	SBRC R19, 3
	SBI PORTD, PD3
	SBRS R19, 4
	CBI	PORTD, PD5
	SBRC R19, 4
	SBI PORTD, PD5
	SBRS R19, 5
	CBI	PORTD, PD6
	SBRC R19, 5
	SBI PORTD, PD6
	SBRS R19, 6
	CBI	PORTD, PD7
	SBRC R19, 6
	SBI PORTD, PD7
	;PUNTO
	CPI R18, 100
	BREQ PUNTITOS
	DEC R18
	
	RJMP Loop

PUNTITOS:
	CLR R18
	SBIS PORTD, PD4
	RJMP ENCENDER_P
	RJMP APAGAR_P

ENCENDER_P:
	SBI	PORTD, PD4
	RJMP Loop

APAGAR_P:
	CBI PORTD, PD4
	RJMP Loop

MODO:
	CPI R25, 7 ;DEFINIMOS 8 MODOS: HORA, FECHA, CONFI. HORA UNI, CONFI HORA DEC, CONFI. FECHA UNI, CONFI FECHA DEC, ALARMA 
	BREQ RST_R25
	INC R25
	RETI
	RST_R25:
	CLR R25
	RETI




ISR_TIMER_OVF1:
	LDI R17, 0x1E ;DESBORDAMIENTO LOW
	STS TCNT1H, R17	;METEMOS VALOR INICIAL
	LDI R17, 0x1B ;DESBORDAMIENTO HIGH
	STS TCNT1L, R17	;METEMOS VALOR INICIAL 
	SBR R20, 0B0000_0001
	RETI

ISR_TIMER_OVF0:
	LDI R17, 251 ;DESBORDAMIENTO
	OUT TCNT0, R17	;METEMOS VALOR INICIAL
	SBR R20, 0B0000_0010
	RETI


INTERRUPCIONES_EXT:
	//PUSH R16
	IN R16, PINC
	SBRS R16, PC0
	RJMP MODO
	SBRS R16, PC2
	SBR R20, 0B0000_1000
	SBRS R16, PC1
	SBR R20, 0B0000_0100
	RETI